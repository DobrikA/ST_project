Описание проекта
Проект собран в Keil 5 (GCC V5.06)

Структура:
/Common_lib
Файлы с расчётом CRC8.

/STM32F4xx_StdPeriph_Driver
Библиотеки для управления периферией STM32F4xx

/Trird_party_lib
Исходники FreeRTOS8.0.1

/UART+ADC
Исходники самого проекта

Кратко по принципу работы.

main.c
Инициализация периферии, запуск планировщика.
uart.c
- Инициализация USART1 RX DMA + IDLE interrupt
- Реализация printf()/UART_printf. Отправка данных
на хост через DMA. Работает с перебоями, нужно дорабатывать раздельный
доступ к ресурсу (USART1->DR). Но отправка работает (для тестов).
- irq_routine.c Обработчики прерываний:
UART_DMA_TX_IRQ_HANDLER() Прерывание по окончанию передачи USART1 
TX DMA. Возвращает семафор xSemaphore_UART_TX_END (блокирует задачу 
DecodeInputDataTask() до завершения отправки пакета хосту)
ADC_DMA_IRQ_HANDLER() Обработчик прерывания DMA по окончанию
записи 32-х отсчётов АЦП1 в массив 
Отдает семафор xSemaphore_ADC_DATA_READY, который блокирует задачу 
AdcAvgCalcTask(), выполняющую усреднение отсчётов АЦП.
Результат усреднения

1. Реализация бинарного интерфейса.
USART1 с использованием IDLE прерывания и DMA передачи (настроена на максимальный
пакет в 260 символов).
Задача прерывания - 
Прерывние IDLE возникает при наличии состояния покоя на линии RX, анализируем 
количество принятых байт и проверяем флаг переполнения DMA, что сигнализирует
о 
